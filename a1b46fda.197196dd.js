(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return c}));var a=n(3),i=n(7),r=(n(0),n(91)),b={title:"validateText()"},l={unversionedId:"functions/validate-text",id:"functions/validate-text",isDocsHomePage:!1,title:"validateText()",description:"This function is used to validate CSS contained within a string.",source:"@site/docs/functions/validate-text.md",slug:"/functions/validate-text",permalink:"/docs/functions/validate-text",editUrl:"https://github.com/sparksuite/w3c-css-validator/edit/master/website/docs/functions/validate-text.md",version:"current",sidebar:"default",previous:{title:"Import",permalink:"/docs/getting-started/import"},next:{title:"validateURL()",permalink:"/docs/functions/validate-url"}},d=[{value:"Options",id:"options",children:[]},{value:"Response structure",id:"response-structure",children:[]}],o={toc:d};function c(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This function is used to validate CSS contained within a string."),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)("p",null,"You can customize the behavior with options, passed as the second argument."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Option"),Object(r.b)("th",{parentName:"tr",align:"left"},"Default"),Object(r.b)("th",{parentName:"tr",align:"left"},"Possible values"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"medium")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"all")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"all"),", ",Object(r.b)("inlineCode",{parentName:"td"},"braille"),", ",Object(r.b)("inlineCode",{parentName:"td"},"embossed"),", ",Object(r.b)("inlineCode",{parentName:"td"},"handheld"),", ",Object(r.b)("inlineCode",{parentName:"td"},"print"),", ",Object(r.b)("inlineCode",{parentName:"td"},"projection"),", ",Object(r.b)("inlineCode",{parentName:"td"},"screen"),", ",Object(r.b)("inlineCode",{parentName:"td"},"speech"),", ",Object(r.b)("inlineCode",{parentName:"td"},"tty"),", ",Object(r.b)("inlineCode",{parentName:"td"},"tv"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"warningLevel")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"0"),", ",Object(r.b)("inlineCode",{parentName:"td"},"1"),", ",Object(r.b)("inlineCode",{parentName:"td"},"2"),", ",Object(r.b)("inlineCode",{parentName:"td"},"3"))))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Option"),Object(r.b)("th",{parentName:"tr",align:"left"},"Explanation"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"medium")),Object(r.b)("td",{parentName:"tr",align:"left"},"The equivalent of the ",Object(r.b)("inlineCode",{parentName:"td"},"@media")," rule, applied to all of the CSS")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"warningLevel")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"0")," means don\u2019t return any warnings; ",Object(r.b)("inlineCode",{parentName:"td"},"1"),", ",Object(r.b)("inlineCode",{parentName:"td"},"2"),", ",Object(r.b)("inlineCode",{parentName:"td"},"3")," will return warnings (if any), with higher numbers corresponding to more warnings")))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"const result = await cssValidator.validateText(css, {\n    medium: 'print',\n    warningLevel: 3,\n});\n")),Object(r.b)("h2",{id:"response-structure"},"Response structure"),Object(r.b)("p",null,"By default, the function returns a Promise, which resolves to an object that looks like:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"{\n    valid: boolean;\n    errors: {\n        line: number;\n        message: string;\n    }[];\n}\n")),Object(r.b)("p",null,"If you ask it to return warnings via ",Object(r.b)("inlineCode",{parentName:"p"},"warningLevel"),", it will also include a ",Object(r.b)("inlineCode",{parentName:"p"},"warnings")," key:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"{\n    ...\n    warnings: {\n        line: number;\n        level: 1 | 2 | 3;\n        message: string;\n    }[];\n}\n")))}c.isMDXComponent=!0}}]);